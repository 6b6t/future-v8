/*
 * Decompiled with CFR 0.152.
 */
package com.gitlab.nuf.exeter.module.impl.toggle.exploits;

import com.gitlab.nuf.api.event.Listener;
import com.gitlab.nuf.exeter.events.MotionUpdateEvent;
import com.gitlab.nuf.exeter.module.ModuleType;
import com.gitlab.nuf.exeter.module.ToggleableModule;
import com.gitlab.nuf.exeter.properties.EnumProperty;
import com.gitlab.nuf.exeter.properties.Property;
import net.minecraft.item.ItemBow;
import net.minecraft.item.ItemBucketMilk;
import net.minecraft.item.ItemFood;
import net.minecraft.item.ItemPotion;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C07PacketPlayerDigging;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumFacing;

public final class FastUse
extends ToggleableModule {
    private final Property<Boolean> bows = new Property<Boolean>(true, "Bows", "bow", "b");
    private final Property<Boolean> potions = new Property<Boolean>(true, "Potions", "potion", "pot", "pots", "p");
    private final Property<Boolean> milk = new Property<Boolean>(true, "Milk", "m");
    private final Property<Boolean> food = new Property<Boolean>(true, "Food", "f");
    private final EnumProperty<Mode> mode = new EnumProperty<Mode>(Mode.DELAY, "Mode", "m");

    public FastUse() {
        super("Fast Use", new String[]{"fastuse", "fu", "iu", "instantuse"}, -209829, ModuleType.EXPLOITS);
        this.offerProperties(this.bows, this.potions, this.milk, this.food, this.mode);
        this.listeners.add(new Listener<MotionUpdateEvent>("fast_use_motion_update_listener"){

            @Override
            public void call(MotionUpdateEvent event) {
                if (FastUse.this.isValidItem(((FastUse)FastUse.this).minecraft.thePlayer.inventory.getCurrentItem()) && (FastUse.this.mode.getValue() == Mode.DELAY && ((FastUse)FastUse.this).minecraft.thePlayer.getItemInUseDuration() >= 15 || FastUse.this.mode.getValue() == Mode.INSTANT)) {
                    for (int index = 0; index < 15; ++index) {
                        FastUse.this.minecraft.getNetHandler().addToSendQueue(new C03PacketPlayer(((FastUse)FastUse.this).minecraft.thePlayer.onGround));
                        FastUse.this.minecraft.getNetHandler().addToSendQueue(new C03PacketPlayer(((FastUse)FastUse.this).minecraft.thePlayer.onGround));
                        FastUse.this.minecraft.getNetHandler().addToSendQueue(new C03PacketPlayer(((FastUse)FastUse.this).minecraft.thePlayer.onGround));
                        FastUse.this.minecraft.getNetHandler().addToSendQueue(new C03PacketPlayer(((FastUse)FastUse.this).minecraft.thePlayer.onGround));
                        FastUse.this.minecraft.getNetHandler().addToSendQueue(new C03PacketPlayer(((FastUse)FastUse.this).minecraft.thePlayer.onGround));
                    }
                    FastUse.this.minecraft.getNetHandler().addToSendQueue(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.RELEASE_USE_ITEM, BlockPos.ORIGIN, EnumFacing.DOWN));
                    ((FastUse)FastUse.this).minecraft.thePlayer.stopUsingItem();
                }
            }
        });
    }

    private boolean isValidItem(ItemStack itemStack) {
        if (itemStack != null && (itemStack.getItem() instanceof ItemPotion && this.potions.getValue() != false || itemStack.getItem() instanceof ItemBucketMilk && this.milk.getValue() != false || itemStack.getItem() instanceof ItemBow && this.bows.getValue() != false || itemStack.getItem() instanceof ItemFood && this.food.getValue().booleanValue())) {
            return this.minecraft.thePlayer.isUsingItem();
        }
        return false;
    }

    public static enum Mode {
        DELAY,
        INSTANT;

    }
}

